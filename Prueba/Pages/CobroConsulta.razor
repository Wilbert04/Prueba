@page "/ConsultaCobros"

@using BLL
@using Models

@inject IToastService toast

<div class="container shadow-lg p-3 rb-5 bg-white rounded col-md-16">
    <div class="card-img">
        <div class="card-header">
            <h1>Consulta de Cobros</h1>
        </div>

        <div class="card-body">
            <form>
                <div class="form-row">
                    <div class="form-group">
                        <label>Filtrar por Fecha</label>
                        <select class="form-control" @bind="FiltroFecha">
                            <option value="0">Todo</option>
                            <option value="1">Fecha</option>
                        </select>
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Desde</label>
                        <input type="date" @bind="Desde" class="form-control" />
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Hasta</label>
                        <input type="date" @bind="Hasta" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label>Filtro</label>
                        <select class="form-control" @bind="Filtro">
                            <option value="0">Todo</option>
                            <option value="1">Cobro ID</option>
                        </select>
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Criterio</label>
                        <div class="input-group">
                            <input type="text" @bind="Criterio" class="form-control">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="@(u => Consultar())"><i class="oi oi-list-rich" /> Consultar</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive text-nowrap" style="position: relative; height:200px; overflow: auto; display: block;">
                    <table class="table table-striped">
                        <thead class="thead-light">
                            <tr>
                                <th>Cobro Id</th>
                                <th>Fecha</th>
                                <th>Cliente Id</th>
                                <th>Total cobrado</th>
                                <th></th>

                            </tr>
                        </thead>
                        <tbody class="bg-white">
                            @foreach (var item in CobroList)
                            {
                                <tr>
                                    <td>@item.CobroId</td>
                                    <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                                    <td>@item.ClienteId</td>
                                    <td>@item.Cobro</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
    </div>
</div>
@code {

    public List<Cobros> CobroList { get; set; }

    private DateTime Desde { get; set; } = DateTime.Now;
    private DateTime Hasta { get; set; } = DateTime.Now;

    public string Filtro { get; set; }
    private string FiltroFecha { get; set; }

    public string Criterio { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        CobroList = new List<Cobros>();
        Filtro = "0";
        Criterio = string.Empty;
    }

    public void Consultar()
    {
        int id;
        int.TryParse(Criterio, out id);
        switch (Filtro)
        {
            case "0": //Todo
                CobroList = CobrosBLL.GetList(c => true);
                break;
            case "1":
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        CobroList = CobrosBLL.GetList(c => c.CobroId == id);
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Digite un Id");
                    }
                }
                else
                {
                    CobroList = CobrosBLL.GetList(c => true).OrderBy(c => c.CobroId).ToList();
                }
                break;
        }

        switch (FiltroFecha)
        {
            case "0": //Nada
                break;
            case "1": //Fecha
                CobroList = CobroList.Where(s => s.Fecha >= Desde && s.Fecha <= Hasta).ToList();
                break;

        }
    }

}
